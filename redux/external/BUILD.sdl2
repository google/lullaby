cc_library(
    name = "sdl2",
    srcs = glob([
        "src/*.c",
        "src/**/*.h",
        "src/atomic/*.c",
        "src/audio/*.c",
        "src/audio/dummy/*.c",
        "src/core/*.c",
        "src/core/dummy/*.c",
        "src/cpuinfo/*.c",
        "src/dynapi/*.c",
        "src/events/*.c",
        "src/file/*.c",
        "src/filesystem/*.c",
        "src/filesystem/dummy/*.c",
        "src/haptic/*.c",
        "src/haptic/dummy/*.c",
        # "src/hidapi/*.c",
        "src/joystick/*.c",
        "src/joystick/dummy/*.c",
        "src/loadso/*.c",
        "src/loadso/dummy/*.c",
        "src/locale/*.c",
        "src/locale/dummy/*.c",
        "src/misc/*.c",
        "src/misc/dummy/*.c",
        "src/render/*.c",
        "src/sensor/*.c",
        "src/sensor/dummy/*.c",
        "src/stdlib/*.c",
        "src/thread/*.c",
        "src/timer/*.c",
        "src/timer/dummy/*.c",
        "src/video/*.c",
        "src/video/dummy/*.c",
        "src/video/offscreen/*.c",
        "src/video/yuv2rgb/*.c",
    ], exclude = [
        "src/hidapi/mac/hid.c",
    ]) + select({
        "@platforms//os:osx": glob([
            "src/audio/coreaudio/*.c",
            "src/audio/disk/*.c",
            "src/core/unix/*.c",
            "src/filesystem/unix/*.c",
            "src/haptic/darwin/*.c",
            # "src/hidapi/mac/*.c",
            "src/joystick/darwin/*.c",
            "src/loadso/dlopen/*.c",
            "src/locale/macosx/*.c",
            "src/misc/macosx/*.c",
            "src/power/macosx/*.c",
            "src/render/opengl/*.c",
            "src/render/metal/*.c",
            "src/render/software/*.c",
            "src/sensor/coremotion/*.c",
            "src/thread/pthread/*.c",
            "src/timer/unix/*.c",
            "src/video/dummy/cocoa/*.c",
            "src/video/dummy/cocoa/*.c",
        ]),
        "@platforms//os:linux": glob([
            "src/audio/linux/*.c",
            "src/core/unix/*.c",
            "src/filesystem/unix/*.c",
            "src/haptic/linux/*.c",
            # "src/hidapi/linux/*.c",
            "src/joystick/linux/*.c",
            "src/loadso/dlopen/*.c",
            "src/locale/unix/*.c",
            "src/misc/unix/*.c",
            "src/power/linux/*.c",
            "src/render/opengl/*.c",
            "src/render/software/*.c",
            "src/thread/pthread/*.c",
            "src/timer/unix/*.c",
            "src/video/dummy/x11/*.c",
        ]),
        "@platforms//os:windows": glob([
            "src/core/windows/*.c",
            "src/filesystem/windows/*.c",
            "src/haptic/windows/*.c",
            # "src/hidapi/windows/*.c",
            "src/joystick/windows/*.c",
            "src/loadso/windows/*.c",
            "src/locale/windows/*.c",
            "src/misc/windows/*.c",
            "src/power/windows/*.c",
            "src/render/opengl/*.c",
            "src/render/software/*.c",
            "src/sensor/windows/*.c",
            "src/thread/windows/*.c",
            "src/timer/windows/*.c",
            "src/video/dummy/windows/*.c",
        ]),
        "//conditions:default": glob([
            "src/render/opengl/*.c",
            "src/render/software/*.c",
        ]),
    }),
    hdrs = glob(["include/**/*.h"]),
    defines = select({
        "@platforms//os:linux": ["SDL_VIDEO_DRIVER_X11"],
        "//conditions:default": [],
    }),
    textual_hdrs = ["src/thread/generic/SDL_syssem.c", "src/hidapi/mac/hid.c"],
    includes = ["include", "src", "src/hidapi", "src/video/khronos"],
    visibility = ["//visibility:public"],
)
