cc_library(
    name = "assimp",
    srcs = glob([
        "code/Common/**/*.cpp",
        "code/Material/**/*.cpp",
        "code/PostProcessing/**/*.cpp",
        # Asset libraries
        "code/AssetLib/Obj/**/*.cpp",
        "code/AssetLib/glTF/**/*.cpp",
        "code/AssetLib/glTF2/**/*.cpp",
        # Private headers.
        "code/**/*.h",
        "code/**/*.hpp",
        "code/**/*.inl",
    ]),
    hdrs = glob([
        "include/assimp/**/*.h",
        "include/assimp/**/*.hpp",
        "include/assimp/**/*.inl",
    ]),
    includes = ["include", "include/assimp", "code"],
    deps = [
        ":contrib",
    ],
    defines = [
        "ASSIMP_BUILD_NO_3D_IMPORTER",
        "ASSIMP_BUILD_NO_3DS_IMPORTER",
        "ASSIMP_BUILD_NO_3MF_IMPORTER",
        "ASSIMP_BUILD_NO_AC_IMPORTER",
        "ASSIMP_BUILD_NO_AMF_IMPORTER",
        "ASSIMP_BUILD_NO_ASE_IMPORTER",
        "ASSIMP_BUILD_NO_ASSBIN_IMPORTER",
        "ASSIMP_BUILD_NO_B3D_IMPORTER",
        "ASSIMP_BUILD_NO_BLEND_IMPORTER",
        "ASSIMP_BUILD_NO_BVH_IMPORTER",
        "ASSIMP_BUILD_NO_C4D_IMPORTER",
        "ASSIMP_BUILD_NO_COB_IMPORTER",
        "ASSIMP_BUILD_NO_COLLADA_IMPORTER",
        "ASSIMP_BUILD_NO_CSM_IMPORTER",
        "ASSIMP_BUILD_NO_DXF_IMPORTER",
        "ASSIMP_BUILD_NO_FBX_IMPORTER",
        "ASSIMP_BUILD_NO_HMP_IMPORTER",
        "ASSIMP_BUILD_NO_IFC_IMPORTER",
        "ASSIMP_BUILD_NO_IQM_IMPORTER",
        "ASSIMP_BUILD_NO_IRR_IMPORTER",
        "ASSIMP_BUILD_NO_IRRMESH_IMPORTER",
        "ASSIMP_BUILD_NO_LWO_IMPORTER",
        "ASSIMP_BUILD_NO_LWS_IMPORTER",
        "ASSIMP_BUILD_NO_M3D_IMPORTER",
        "ASSIMP_BUILD_NO_MD2_IMPORTER",
        "ASSIMP_BUILD_NO_MD3_IMPORTER",
        "ASSIMP_BUILD_NO_MD5_IMPORTER",
        "ASSIMP_BUILD_NO_MDC_IMPORTER",
        "ASSIMP_BUILD_NO_MDL_IMPORTER",
        "ASSIMP_BUILD_NO_MMD_IMPORTER",
        "ASSIMP_BUILD_NO_MS3D_IMPORTER",
        "ASSIMP_BUILD_NO_NDO_IMPORTER",
        "ASSIMP_BUILD_NO_NFF_IMPORTER",
        "ASSIMP_BUILD_NO_OFF_IMPORTER",
        "ASSIMP_BUILD_NO_OGRE_IMPORTER",
        "ASSIMP_BUILD_NO_OPENGEX_IMPORTER",
        "ASSIMP_BUILD_NO_PLY_IMPORTER",
        "ASSIMP_BUILD_NO_Q3BSP_IMPORTER",
        "ASSIMP_BUILD_NO_Q3D_IMPORTER",
        "ASSIMP_BUILD_NO_RAW_IMPORTER",
        "ASSIMP_BUILD_NO_SIB_IMPORTER",
        "ASSIMP_BUILD_NO_SMD_IMPORTER",
        "ASSIMP_BUILD_NO_STL_IMPORTER",
        "ASSIMP_BUILD_NO_TERRAGEN_IMPORTER",
        "ASSIMP_BUILD_NO_X3D_IMPORTER",
        "ASSIMP_BUILD_NO_XGL_IMPORTER",
        "ASSIMP_BUILD_NO_X_IMPORTER",
        "AI_MATKEY_GLTF_PBRSPECULARGLOSSINESS=AI_MATKEY_GLOSSINESS_FACTOR",
    ],
    copts = select({
        "@platforms//os:windows": ["/wd4244"],
        "//conditions:default": [],
    }),
    visibility = ["//visibility:public"],
)

cc_library(
    name = "contrib",
    srcs = glob([
        "contrib/zip/*.c",
        "contrib/unzip/*.c",
    ]),
    hdrs = glob([
        "contrib/unzip/**/*.h",
        "contrib/zip/**/*.h",
        # assimp includes this as "../contrib/zlib/zlib.h"
        "contrib/zlib/zlib.h",
        # assimp includes this as "../contrib/utf8cpp/source/utf8.h"
        "contrib/utf8cpp/source/utf8.h",
    ]),
    includes = [
        "contrib/unzip",
        "contrib/zip",
    ],
    deps = [
        "@rapidjson//:rapidjson",
        "@stblib//:stblib",
        "@utfcpp//:utfcpp",
        "@zlib//:zlib",
    ],
)
